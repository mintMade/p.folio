<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="photo">
	<typeAlias alias="ptBean" type="com.picxen.photo.model.PhotoBean"/>
	<typeAlias alias="cgBean" type="com.picxen.photo.model.CategoryBean"/>
	<typeAlias alias="mbBean" type="com.picxen.member.model.MemberBean"/>
	<typeAlias alias="pLikeBean" type="com.picxen.photo.model.PhotoLikeBean"/>
	<typeAlias alias="ilBean" type="com.picxen.log.model.IpLogBean"/>

	<!-- 카테고리 리스트 -->
	<select id="cgList" resultClass="cgBean">
		select * from category order by categoryOrder
	</select>
	
	<!-- 카테고리별 사진리스트 + 인기사진 소팅 -->
	<select id="ptListByPop" parameterClass="String" resultClass="ptBean">
		select * from photos p, category c
            where p.categoryNo = c.categoryNo  
            and categoryName=#cgName# and publicset <![CDATA[<>]]> 1 order by popular desc, regdate desc
	</select>
	
	<!-- 카테고리+새로올라온 사진 -->
	<select id="ptListByNew" parameterClass="String" resultClass="ptBean">
		select * from photos p, category c
    		where p.categoryNo = c.categoryNo 
    		and categoryName=#cgName# and publicset <![CDATA[<>]]> 1 order by regdate desc
	</select>
	
	<!-- 카테고리+뜨는사진 -->
	<select id="ptListByUpcom" parameterClass="String" resultClass="ptBean">
		select * from photos p, category c   
   			where p.categoryNo = c.categoryNo and categoryName=#cgName# and publicset <![CDATA[<>]]> 1 
        	and regdate >= sysdate-1 order by popular desc, regdate desc
	</select>


<!-- reNEW ptList 삭제예정-->
	<select id="getCgBean" parameterClass="String" resultClass="cgBean">
		select * from category where categoryName = #cgName#
	</select>
	
	
	<select id="listPtBySearch" parameterClass="cgBean" resultClass="ptBean" >
			<isEqual property="categoryOrder" compareValue="0" >
				select * from photos order by popular desc, regdate desc
			</isEqual>
			<isNotEqual property="categoryOrder" compareValue="0" >
			select * from photos p, category c
						where p.categoryNo = c.categoryNo
								and categoryName = #categoryName# and publicset <![CDATA[<>]]> 1
			</isNotEqual>
		
	</select>
<!-- /reNEW ptList-->

<!-- alpha -->

	<sql id="order.dynamic">
		<isNotEmpty property="filterName">
			<isEqual property="filterName" compareValue="pop">
				order by popular desc,
			</isEqual>
			<isEqual property="filterName" compareValue="new">
				order by
			</isEqual>
			<isEqual property="filterName" compareValue="upcom">
				and regdate <![CDATA[>=]]> sysdate-1 order by popular desc,
			</isEqual>
		</isNotEmpty>
		<isEmpty property="filterName">
			order by popular desc,
		</isEmpty>
	</sql>
	
	<select id="listPtAll" parameterClass="cgBean" resultClass="ptBean">
			select * from photos where publicset <![CDATA[<>]]> 1
		<include refid="order.dynamic" />
			regdate desc
	</select>
	
	<select id="listPtCg" parameterClass="cgBean" resultClass="ptBean">
		select * from photos p, category c
            where p.categoryNo = c.categoryNo  
            and categoryName=#categoryName# and publicset <![CDATA[<>]]> 1 
		<include refid="order.dynamic" />            
            regdate desc
	</select>
<!-- alpha -->		

	<select id="listPtBySearcha" parameterClass="cgBean" resultClass="ptBean">
		<isEmpty property="categoryName">
			select * from photos
		</isEmpty>
			<isNotEmpty property="categoryName"><!--   -->
				<isEqual property="categoryName" compareValue="categoryName">
					<!-- select * from photos
						where publicset <![CDATA[<>]]> 1 -->
					select * from category where categoryName=#categoryName#
				</isEqual>
				
				<isNotEqual property="categoryName" compareValue="categoryName">
					select * from photos p, category c
					where p.categoryNo = c.categoryNo
							and categoryName = #categoryName# and publicset <![CDATA[<>]]> 1 
				</isNotEqual>
					
			</isNotEmpty>
			where publicset <![CDATA[<>]]> 1 order by popular desc, regdate desc
	</select>



	<!-- 기본 및 인기 -->
	<select id="ptPopList" resultClass="ptBean">
		<!-- 인기순/날짜순 출력 -->
		select * from photos where publicset <![CDATA[<>]]> 1 order by popular desc, regdate desc
	</select>
		
	<!-- 새로운 사진 -->
	<select id="ptNewList" resultClass="ptBean">
		select * from photos where publicset <![CDATA[<>]]> 1 order by regdate desc
	</select>
	
	<!-- ptUpcomList뜨고있는 -->
	<select id="ptUpcomList" resultClass="ptBean">
		select * from photos where publicset <![CDATA[<>]]> 1 and regdate <![CDATA[>=]]> sysdate-1 order by popular desc, regdate desc <!-- 하루전과 같거나 이후시간  -->
	</select>
		
	<select id="ptListByEvent" parameterClass="string" resultClass="ptBean"><!-- 삭제 대상 이벤트 사용않함 -->
		select p.* from photos p, eventPhoto e
			where p.photoNo = e.photoNo 
			and eventName=#eventName#
	</select>

	<insert id="ptUpload" parameterClass="ptBean">
		<selectKey keyProperty="photoNo" resultClass="int">
			select photos_seq.nextval from dual
		</selectKey>
		insert into photos(photoNo, categoryNo, photoTitle, imageURL, tag,
			description, publicSet, uploader <!-- mileage, likeCnt, viewCnt, viewCnt, faves,
			popular-->)
		values(#photoNo#, #categoryNo#, #photoTitle#, #imageURL#, #tag#,
			#description#, #publicSet#, #uploader# <!-- #mileage#,  #likeCnt#, #viewCnt#, #viewCnt#, #faves#,
			#popular#-->)
	</insert>
	
	<!-- 구경하기외 메인등에서 접근할때 -->
	<select id="ptListAll" resultClass="ptBean">
		<!-- 노출가능한 사진만 출력  -->
		select * from photos where publicset <![CDATA[<>]]>1 order by regdate desc
	</select>
	
	<select id="ptDetail" parameterClass="int" resultClass="ptBean">
		select * from photos where photoNo=#ptNo#
	</select>
	
	<select id="viewId" parameterClass="int" resultClass="mbBean">
		select lName, fName, userId, myIcon
			from photos p, member m
			where p.uploader = m.userid
			and photoNo=#ptNo#
	</select>
	
	<update id="ptViewCnt" parameterClass="ilBean">
		update photos set viewCnt=viewCnt+1
  		  where photoNo=#ptNo# and
  		  	(select count(*) from iplog where ip=#ip# and ptNo=#ptNo#) <![CDATA[<]]>=1 <!-- 테스트아이피 중복으로 조건에 충족해도 카운트가 안올라가는것 -->
	</update>	
	
	<update id="ptLikeCnt" parameterClass="pLikeBean">
		update photos set likeCnt=likeCnt+1
			where photoNo=#ptNo# and
			(select count(*) from likeCnt where userid=#userid# and ptNo=#ptNo#) = 0
	</update>
	
	<insert id="insertLike" parameterClass="pLikeBean">
		<selectKey keyProperty="likeNo" resultClass="int">
			select likeCnt_seq.nextval from dual
		</selectKey>
		insert into likeCnt (likeNo, ptNo, userid)
    		select likeCnt_seq.nextval, #ptNo#, #userid#
		    from dual
		    where (select count(*) from likeCnt where userId=#userid# and ptNo=#ptNo#) = 0
	</insert>
	
	<procedure id="prcdLike_pop" parameterClass="pLikeBean">
		{call procedure_pop(#ptNo#)}
	</procedure>
	
	<!-- 상세페이지에서 좋아요 카운트 존재여부에 따라 아이콘 활성비활성 로그 #현재는 로그인시 비활성처리 161107-->
	<!-- <select id="getLikeUserid" parameterClass="pLikeBean" resultClass="int">
		select count(*) from likeCnt 
    			where userid=#userid#
    			and ptNo=#ptNo#
	</select> -->
	
	<select id="searchPtByTag" parameterClass="String" resultClass="ptBean">
		select * from photos
			where tag like '%' || #kword# || '%'
			or photoTitle like '%' || #kword# ||'%'
	</select>
	
	
<!-- 	<select id="listMostPopularPhoto" parameterClass="int" resultClass="ptBean">
	<![CDATA[select photoNo, phtoName
		from
		(select o.photoNo, p.photoName, sum(o.quantity) as totalcount 
		from orderdetails o, photos p
		where o.photoNo = p.photoNo
		and p.categoryNo=(select categoryNo 
			from photos where photoNo=#photoNo#)
		group by o.photoNo, p.photoName order by totalcount desc)
		where rownum<=5
	]]>
	</select> -->
	
<!-- private int photoNo;
	private int categoryNo;
	private String photoTitle;
	private String imageURL;
	private String tag;
	private String description;
	private Timestamp regdate;
	private int publicSet;
	private int mileage;
	private int likeCnt;
	private int viewCnt;
	private int faves;
	private int popular;
	private Timestamp popDate; -->
</sqlMap>